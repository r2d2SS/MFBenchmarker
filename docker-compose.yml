version: '3.8'

services:
  db:
    image: postgres:13
    environment:
      POSTGRES_DB: mf_benchmarker
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DEBUG=True
      - SECRET_KEY=your-secret-key-here
      - DB_ENGINE=django.db.backends.postgresql
      - DB_NAME=mf_benchmarker
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: >
      sh -c "
        python manage.py migrate &&
        python manage.py collectstatic --noinput &&
        gunicorn --bind 0.0.0.0:8000 --workers 3 Benchmarker.wsgi:application
      "

  celery:
    build: .
    environment:
      - DEBUG=True
      - SECRET_KEY=your-secret-key-here
      - DB_ENGINE=django.db.backends.postgresql
      - DB_NAME=mf_benchmarker
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
    command: celery -A Benchmarker worker -l info

  celery-beat:
    build: .
    environment:
      - DEBUG=True
      - SECRET_KEY=your-secret-key-here
      - DB_ENGINE=django.db.backends.postgresql
      - DB_NAME=mf_benchmarker
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
    command: celery -A Benchmarker beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler

volumes:
  postgres_data:
  static_volume:
  media_volume: